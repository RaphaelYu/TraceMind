name: CI

on:
  push:
  pull_request:

jobs:
  lint-and-test:
    name: tests (${{ matrix.os }} / py${{ matrix.python }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          python -m pip install pytest pytest-asyncio pytest-cov ruff black mypy PyYAML croniter
          python -m pip install -e .

      - name: Ruff
        run: python -m ruff check .

      - name: Black
        run: python -m black --check .

      - name: Mypy
        run: python -m mypy tm/kstore tm/validate

      - name: Pytest
        run: python -m pytest -q

      - name: Run M1 demos (Linux only)
        if: runner.os == 'Linux'
        run: |
          chmod +x scripts/validate_examples.sh
          scripts/validate_examples.sh
        shell: bash

  no-sqlite:
    name: tests (NO_SQLITE)
    runs-on: ubuntu-latest
    env:
      NO_SQLITE: "1"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          python -m pip install pytest pytest-asyncio pytest-cov PyYAML croniter
          python -m pip install -e .

      - name: Pytest
        run: python -m pytest -q

  daemon-smoke:
    name: daemon smoke (linux)
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .

      - name: Run daemon smoke script
        env:
          TM_ENABLE_DAEMON: "1"
          TM_FILE_QUEUE_V2: "1"
        run: |
          chmod +x scripts/daemon_smoke.sh
          scripts/daemon_smoke.sh
        shell: bash
